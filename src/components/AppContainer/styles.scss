@import './variables.scss';
@import './fonts.scss';

:global {
  ::-webkit-scrollbar {
    width: 4px;
    height: 4px;
  }

  ::-webkit-scrollbar-track {
    background-color: transparentize(#000, 0.8);
  }

  ::-webkit-scrollbar-thumb {
    background-color: #000000;
  }

  input[type='number'] {
    -moz-appearance: textfield;
  }

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }

  html {
    width: 100%;
    height: 100%;
    font-size: 10px;
  }

  body {
    display: flex;
    flex-direction: column;
    width: 100%;
    min-height: 100%;
    margin: 0;
    overflow: auto;
  }

  #root {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    width: 100%;
  }
}

.layout {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: 100%;
}

.page {
  position: relative;
  width: 100%;
}

.visuallyHidden {
  /* Удаляем элемент из потока документа */
  position: absolute;
  /* Устанавливаем минимально возможный размер (некоторые скринридеры игнорируют элементы с нулевой высотой и шириной) */
  width: 1px;
  height: 1px;
  /* Похоже, никто до конца не понимает, почему тут margin: -1px. Кроме того, это приводит к проблемам (читай: https://github.com/h5bp/html5-boilerplate/issues/1985). */
  margin: -1px;
  padding: 0;
  /* Временное решение для неверно произносимого, размазанного текста */
  white-space: nowrap;
  /* Сбрасываем любые свойства, которые могут повлиять на размер элемента */
  border: 0;
  /* Скрываем вылезающий за границы контент */
  overflow: hidden;
  /* Вырезаем ту часть контента, которая должна отображаться. */
  /* Устаревшее свойство clip для старых браузеров */
  clip: rect(0 0 0 0);
  /* clip-path для новых браузеров. inset(50%) определяет область вставки, которая позволит контенту исчезнуть.  */
  clip-path: inset(50%);
}